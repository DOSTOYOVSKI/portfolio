{
  "version": 3,
  "sources": ["../../rehype-plugin-image-native-lazy-loading/node_modules/unist-util-is/convert.js", "../../rehype-plugin-image-native-lazy-loading/node_modules/unist-util-visit-parents/color.browser.js", "../../rehype-plugin-image-native-lazy-loading/node_modules/unist-util-visit-parents/index.js", "../../rehype-plugin-image-native-lazy-loading/node_modules/unist-util-visit/index.js", "../../rehype-plugin-image-native-lazy-loading/lib/index.js"],
  "sourcesContent": ["'use strict'\r\n\r\nmodule.exports = convert\r\n\r\nfunction convert(test) {\r\n  if (test == null) {\r\n    return ok\r\n  }\r\n\r\n  if (typeof test === 'string') {\r\n    return typeFactory(test)\r\n  }\r\n\r\n  if (typeof test === 'object') {\r\n    return 'length' in test ? anyFactory(test) : allFactory(test)\r\n  }\r\n\r\n  if (typeof test === 'function') {\r\n    return test\r\n  }\r\n\r\n  throw new Error('Expected function, string, or object as test')\r\n}\r\n\r\n// Utility assert each property in `test` is represented in `node`, and each\r\n// values are strictly equal.\r\nfunction allFactory(test) {\r\n  return all\r\n\r\n  function all(node) {\r\n    var key\r\n\r\n    for (key in test) {\r\n      if (node[key] !== test[key]) return false\r\n    }\r\n\r\n    return true\r\n  }\r\n}\r\n\r\nfunction anyFactory(tests) {\r\n  var checks = []\r\n  var index = -1\r\n\r\n  while (++index < tests.length) {\r\n    checks[index] = convert(tests[index])\r\n  }\r\n\r\n  return any\r\n\r\n  function any() {\r\n    var index = -1\r\n\r\n    while (++index < checks.length) {\r\n      if (checks[index].apply(this, arguments)) {\r\n        return true\r\n      }\r\n    }\r\n\r\n    return false\r\n  }\r\n}\r\n\r\n// Utility to convert a string into a function which checks a given nodeâ€™s type\r\n// for said string.\r\nfunction typeFactory(test) {\r\n  return type\r\n\r\n  function type(node) {\r\n    return Boolean(node && node.type === test)\r\n  }\r\n}\r\n\r\n// Utility to return true.\r\nfunction ok() {\r\n  return true\r\n}\r\n", "module.exports = identity\r\nfunction identity(d) {\r\n  return d\r\n}\r\n", "'use strict'\r\n\r\nmodule.exports = visitParents\r\n\r\nvar convert = require('unist-util-is/convert')\r\nvar color = require('./color')\r\n\r\nvar CONTINUE = true\r\nvar SKIP = 'skip'\r\nvar EXIT = false\r\n\r\nvisitParents.CONTINUE = CONTINUE\r\nvisitParents.SKIP = SKIP\r\nvisitParents.EXIT = EXIT\r\n\r\nfunction visitParents(tree, test, visitor, reverse) {\r\n  var step\r\n  var is\r\n\r\n  if (typeof test === 'function' && typeof visitor !== 'function') {\r\n    reverse = visitor\r\n    visitor = test\r\n    test = null\r\n  }\r\n\r\n  is = convert(test)\r\n  step = reverse ? -1 : 1\r\n\r\n  factory(tree, null, [])()\r\n\r\n  function factory(node, index, parents) {\r\n    var value = typeof node === 'object' && node !== null ? node : {}\r\n    var name\r\n\r\n    if (typeof value.type === 'string') {\r\n      name =\r\n        typeof value.tagName === 'string'\r\n          ? value.tagName\r\n          : typeof value.name === 'string'\r\n          ? value.name\r\n          : undefined\r\n\r\n      visit.displayName =\r\n        'node (' + color(value.type + (name ? '<' + name + '>' : '')) + ')'\r\n    }\r\n\r\n    return visit\r\n\r\n    function visit() {\r\n      var grandparents = parents.concat(node)\r\n      var result = []\r\n      var subresult\r\n      var offset\r\n\r\n      if (!test || is(node, index, parents[parents.length - 1] || null)) {\r\n        result = toResult(visitor(node, parents))\r\n\r\n        if (result[0] === EXIT) {\r\n          return result\r\n        }\r\n      }\r\n\r\n      if (node.children && result[0] !== SKIP) {\r\n        offset = (reverse ? node.children.length : -1) + step\r\n\r\n        while (offset > -1 && offset < node.children.length) {\r\n          subresult = factory(node.children[offset], offset, grandparents)()\r\n\r\n          if (subresult[0] === EXIT) {\r\n            return subresult\r\n          }\r\n\r\n          offset =\r\n            typeof subresult[1] === 'number' ? subresult[1] : offset + step\r\n        }\r\n      }\r\n\r\n      return result\r\n    }\r\n  }\r\n}\r\n\r\nfunction toResult(value) {\r\n  if (value !== null && typeof value === 'object' && 'length' in value) {\r\n    return value\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    return [CONTINUE, value]\r\n  }\r\n\r\n  return [value]\r\n}\r\n", "'use strict'\r\n\r\nmodule.exports = visit\r\n\r\nvar visitParents = require('unist-util-visit-parents')\r\n\r\nvar CONTINUE = visitParents.CONTINUE\r\nvar SKIP = visitParents.SKIP\r\nvar EXIT = visitParents.EXIT\r\n\r\nvisit.CONTINUE = CONTINUE\r\nvisit.SKIP = SKIP\r\nvisit.EXIT = EXIT\r\n\r\nfunction visit(tree, test, visitor, reverse) {\r\n  if (typeof test === 'function' && typeof visitor !== 'function') {\r\n    reverse = visitor\r\n    visitor = test\r\n    test = null\r\n  }\r\n\r\n  visitParents(tree, test, overload, reverse)\r\n\r\n  function overload(node, parents) {\r\n    var parent = parents[parents.length - 1]\r\n    var index = parent ? parent.children.indexOf(node) : null\r\n    return visitor(node, index, parent)\r\n  }\r\n}\r\n", "\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst unist_util_visit_1 = __importDefault(require(\"unist-util-visit\"));\r\nfunction lazyloadPlugin() {\r\n    function visitor(el) {\r\n        if (el.tagName !== 'img') {\r\n            return;\r\n        }\r\n        el.properties = Object.assign(Object.assign({}, (el.properties || {})), { loading: 'lazy' });\r\n    }\r\n    function transformer(htmlAST) {\r\n        unist_util_visit_1.default(htmlAST, 'element', visitor);\r\n        return htmlAST;\r\n    }\r\n    return transformer;\r\n}\r\nexports.default = lazyloadPlugin;\r\nmodule.exports = lazyloadPlugin;\r\n"],
  "mappings": "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",
  "names": ["index"]
}
