{
  "version": 3,
  "sources": ["../../reading-time/lib/reading-time.js", "browser-external:stream", "browser-external:util", "../../reading-time/lib/stream.js", "../../reading-time/index.js"],
  "sourcesContent": ["/*!\r\n * reading-time\r\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\r\n */\r\n\r\n/**\r\n * @param {number} number\r\n * @param {number[][]} arrayOfRanges\r\n */\r\nfunction codeIsInRanges(number, arrayOfRanges) {\r\n  return arrayOfRanges.some(([lowerBound, upperBound]) =>\r\n    (lowerBound <= number) && (number <= upperBound)\r\n  )\r\n}\r\n\r\n/**\r\n * @type {WordBoundFunction}\r\n */\r\nfunction isCJK(c) {\r\n  if ('string' !== typeof c) {\r\n    return false\r\n  }\r\n  const charCode = c.charCodeAt(0)\r\n  // Help wanted!\r\n  // This should be good for most cases, but if you find it unsatisfactory\r\n  // (e.g. some other language where each character should be standalone words),\r\n  // contributions welcome!\r\n  return codeIsInRanges(\r\n    charCode,\r\n    [\r\n      // Hiragana (Katakana not included on purpose,\r\n      // context: https://github.com/ngryman/reading-time/pull/35#issuecomment-853364526)\r\n      // If you think Katakana should be included and have solid reasons, improvement is welcomed\r\n      [0x3040, 0x309f],\r\n      // CJK Unified ideographs\r\n      [0x4e00, 0x9fff],\r\n      // Hangul\r\n      [0xac00, 0xd7a3],\r\n      // CJK extensions\r\n      [0x20000, 0x2ebe0]\r\n    ]\r\n  )\r\n}\r\n\r\n/**\r\n * @type {WordBoundFunction}\r\n */\r\nfunction isAnsiWordBound(c) {\r\n  return ' \\n\\r\\t'.includes(c)\r\n}\r\n\r\n/**\r\n * @type {WordBoundFunction}\r\n */\r\nfunction isPunctuation(c) {\r\n  if ('string' !== typeof c) {\r\n    return false\r\n  }\r\n  const charCode = c.charCodeAt(0)\r\n  return codeIsInRanges(\r\n    charCode,\r\n    [\r\n      [0x21, 0x2f],\r\n      [0x3a, 0x40],\r\n      [0x5b, 0x60],\r\n      [0x7b, 0x7e],\r\n      // CJK Symbols and Punctuation\r\n      [0x3000, 0x303f],\r\n      // Full-width ASCII punctuation variants\r\n      [0xff00, 0xffef]\r\n    ]\r\n  )\r\n}\r\n\r\n/**\r\n * @type {import('reading-time').default}\r\n */\r\nfunction readingTime(text, options = {}) {\r\n  let words = 0, start = 0, end = text.length - 1\r\n\r\n  // use provided value if available\r\n  const wordsPerMinute = options.wordsPerMinute || 200\r\n\r\n  // use provided function if available\r\n  const isWordBound = options.wordBound || isAnsiWordBound\r\n\r\n  // fetch bounds\r\n  while (isWordBound(text[start])) start++\r\n  while (isWordBound(text[end])) end--\r\n\r\n  // Add a trailing word bound to make handling edges more convenient\r\n  const normalizedText = `${text}\\n`\r\n\r\n  // calculate the number of words\r\n  for (let i = start; i <= end; i++) {\r\n    // A CJK character is a always word;\r\n    // A non-word bound followed by a word bound / CJK is the end of a word.\r\n    if (\r\n      isCJK(normalizedText[i]) ||\r\n      (!isWordBound(normalizedText[i]) &&\r\n        (isWordBound(normalizedText[i + 1]) || isCJK(normalizedText[i + 1]))\r\n      )\r\n    ) {\r\n      words++\r\n    }\r\n    // In case of CJK followed by punctuations, those characters have to be eaten as well\r\n    if (isCJK(normalizedText[i])) {\r\n      while (\r\n        i <= end &&\r\n        (isPunctuation(normalizedText[i + 1]) || isWordBound(normalizedText[i + 1]))\r\n      ) {\r\n        i++\r\n      }\r\n    }\r\n  }\r\n\r\n  // reading time stats\r\n  const minutes = words / wordsPerMinute\r\n  // Math.round used to resolve floating point funkyness\r\n  //   http://docs.oracle.com/cd/E19957-01/806-3568/ncg_goldberg.html\r\n  const time = Math.round(minutes * 60 * 1000)\r\n  const displayed = Math.ceil(minutes.toFixed(2))\r\n\r\n  return {\r\n    text: displayed + ' min read',\r\n    minutes: minutes,\r\n    time: time,\r\n    words: words\r\n  }\r\n}\r\n\r\n/**\r\n * Export\r\n */\r\nmodule.exports = readingTime\r\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      console.warn(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code. See https://vitejs.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`)\n    }\n  }\n}))", "/*!\r\n * reading-time\r\n * Copyright (c) Nicolas Gryman <ngryman@gmail.com>\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n */\r\nconst readingTime = require('./reading-time')\r\nconst Transform = require('stream').Transform\r\nconst util = require('util')\r\n\r\n/**\r\n * @typedef {import('reading-time').Options} Options\r\n * @typedef {import('reading-time').Options['wordBound']} WordBoundFunction\r\n * @typedef {import('reading-time').readingTimeStream} ReadingTimeStream\r\n * @typedef {import('stream').TransformCallback} TransformCallback\r\n */\r\n\r\n/**\r\n * @param {Options} options\r\n * @returns {ReadingTimeStream}\r\n */\r\nfunction ReadingTimeStream(options) {\r\n  // allow use without new\r\n  if (!(this instanceof ReadingTimeStream)) {\r\n    return new ReadingTimeStream(options)\r\n  }\r\n\r\n  Transform.call(this, { objectMode: true })\r\n\r\n  this.options = options || {}\r\n  this.stats = {\r\n    minutes: 0,\r\n    time: 0,\r\n    words: 0\r\n  }\r\n}\r\nutil.inherits(ReadingTimeStream, Transform)\r\n\r\n/**\r\n * @param {Buffer} chunk\r\n * @param {BufferEncoding} encoding\r\n * @param {TransformCallback} callback\r\n */\r\nReadingTimeStream.prototype._transform = function(chunk, encoding, callback) {\r\n  const stats = readingTime(chunk.toString(encoding), this.options)\r\n\r\n  this.stats.minutes += stats.minutes\r\n  this.stats.time += stats.time\r\n  this.stats.words += stats.words\r\n\r\n  callback()\r\n}\r\n\r\n/**\r\n * @param {TransformCallback} callback\r\n */\r\nReadingTimeStream.prototype._flush = function(callback) {\r\n  this.stats.text = Math.ceil(this.stats.minutes.toFixed(2)) + ' min read'\r\n\r\n  this.push(this.stats)\r\n  callback()\r\n}\r\n\r\n/**\r\n * Export\r\n */\r\nmodule.exports = ReadingTimeStream\r\n", "module.exports.default = module.exports = require('./lib/reading-time')\r\nmodule.exports.readingTimeStream = require('./lib/stream')\r\n"],
  "mappings": "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",
  "names": ["require_stream", "require_reading_time"]
}
